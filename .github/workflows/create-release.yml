name: Create Release

on:
  workflow_dispatch:
    inputs:
      draft:
        type: choice
        description: "Create the release as draft"
        options: 
          - "yes"
          - "no"
        default: "no"
        required: true
      force:
        type: choice
        description: "Force the creation of a release (event if no PR are found)"
        options: 
          - "yes"
          - "no"
        default: "no"
        required: true

jobs:

  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      pull-requests: read
    outputs:
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we need this because fetch-tags=true and because of a GHA bug: https://github.com/actions/checkout/issues/1471
          fetch-tags: true
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run build
        run: |
          make build
      - name: Create release
        id: release
        run: |
          OPTIONS=""
          if test "${{ github.event.inputs.draft }}" == "yes"; then
            OPTIONS="${OPTIONS} --release-draft"
          fi
          if test "${{ github.event.inputs.force }}" == "yes"; then
            OPTIONS="${OPTIONS} --dont-increment-if-no-pr"
          fi
          echo "OPTIONS=${OPTIONS}"
          TAG=`./cmd/github-create-next-semantic-release/github-create-next-semantic-release --log-level=DEBUG ${OPTIONS} .`
          echo "TAG=${TAG}"
          echo "tag=${TAG}" >>"$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release_go_binary:
    needs: release
    name: Release Go Binary
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      pull-requests: read
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - name: Debug
        run: |
          echo "tag=${{ needs.release.outputs.tag }}"
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: ./cmd/github-next-semantic-version
          binary_name: github-next-semantic-version
          compress_assets: "OFF"
          pre_command: export CGO_ENABLED=0
          release_tag: ${{ needs.release.outputs.tag }}
